[package]
name = "hyper_api_service"
version = "0.1.8"
license = "MIT"
authors = ["JunYi JohnTeee Lee <johnteee@gmail.com>"]
edition = "2018"
include = ["src/**/*.rs", "Cargo.toml"]
readme = "README.md"
description = "A Retrofit inspired implementation for Rust."
documentation = "https://docs.rs/hyper_api_service/"
homepage = "https://github.com/TeaEntityLab/hyperAPIService"
repository = "https://github.com/TeaEntityLab/hyperAPIService"
keywords = ["retrofit","http","api","binding","hyper"]

[badges.maintenance]
status = "actively-developed"

[lib]
name = "hyper_api_service"
path = "src/lib.rs"

[features]
default = [
  "for_hyper", "multipart", "for_serde"
]
pure = []
multipart = [ "formdata", "multer", "mime" ]
for_serde = [ "serde", "serde_json" ]
for_hyper = [ "hyper", "tokio" ]

test_runtime = [
"for_hyper", "multipart", "for_serde", "fp_rust", "hyper/full",
]

[dependencies]

# Required
hyper = { version = "^0.14.0", optional = true, features = ["client", "http1", "http2", "stream", "tcp",] }
tokio = { version = "^1.8.0", optional = true,features = ["time", "macros",] }
bytes = "^1.0.0"
http = "^0.2.4"
futures="^0.3.0"
url="^2.2.0"

# multipart
formdata = { version = "^0.13.0", optional = true }
multer = { version = "^2.0.0", optional = true }
mime = { version = "^0.3.0", optional = true }

# for_serde
serde = { version = "^1.0", features = ["derive"], optional = true }
serde_json = { version = "^1.0", optional = true }

# test_runtime
fp_rust={ version = "^0.2.4", features = ["for_futures"], optional = true }

[[test]]
name = "simple_http"
path = "tests/simple_http.rs"
required-features = ["test_runtime"]

[[test]]
name = "simple_api"
path = "tests/simple_api.rs"
required-features = ["test_runtime"]
